{"version":3,"sources":["./src/app/services/shopping-cart.service.ts","./src/app/admin/admin-orders/admin-orders.component.ts","./src/app/admin/admin-orders/admin-orders.component.html","./src/app/Models/shopping-cart.ts","./src/app/product-card/product-card.component.html","./src/app/product-card/product-card.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/services/product.service.ts","./src/app/admin/edit-product/edit-product.component.ts","./src/app/admin/edit-product/edit-product.component.html","./src/app/services/auth-guard.service.ts","./src/app/order-success/order-success.component.ts","./src/app/order-success/order-success.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/product-quantity/product-quantity.component.ts","./src/app/product-quantity/product-quantity.component.html","./src/app/admin/products/products.component.ts","./src/app/admin/products/products.component.html","./src/app/shopping-cart-summary/shopping-cart-summary.component.ts","./src/app/shopping-cart-summary/shopping-cart-summary.component.html","./src/app/app.module.ts","./src/app/services/authentication.service.ts","./src/app/shopping-cart/shopping-cart.component.ts","./src/app/shopping-cart/shopping-cart.component.html","./src/app/access-denied/access-denied.component.ts","./src/app/access-denied/access-denied.component.html","./src/app/admin-auth-gaurd.service.ts","./src/app/services/order.service.ts","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/check-out/check-out.component.ts","./src/app/check-out/check-out.component.html","./src/app/my-orders/my-orders.component.ts","./src/app/my-orders/my-orders.component.html","./src/app/services/user.service.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/angular-material.module.ts","./src/app/Models/order.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/categories.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {AngularFireDatabase, AngularFireObject} from '@angular/fire/database';\nimport {map, take} from 'rxjs/operators';\nimport {ShoppingCart} from '../Models/shopping-cart';\nimport {ShoppingCartItem} from '../Models/shopping-cart-item';\nimport {Product} from '../Models/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartService {\n\n  constructor(private db: AngularFireDatabase) {\n  }\n\n  create() {\n    return this.db.list('/shopping-carts').push({\n      dateCreated: new Date().getTime()\n    });\n  }\n\n  async getCart() {\n    return (await this._getCart()).valueChanges().pipe(map(c => new ShoppingCart(c.items)));\n  }\n\n  async addToCart(productKey: string, title: string, price: string, imageUrl: string) {\n    this.changeQuantity(productKey, 1, title, price, imageUrl);\n  }\n\n  async removeFromCart(productKey, title: string, price: string, imageUrl: string) {\n    this.changeQuantity(productKey, -1, title, price, imageUrl);\n  }\n\n  private async _getCart(): Promise<AngularFireObject<ShoppingCart>> {\n    let cartId = await this.getOrCreateCart();\n    return this.db.object('/shopping-carts/' + cartId);\n  }\n\n  private getItem(cartId: string, productId: string): AngularFireObject<ShoppingCartItem> {\n    return this.db.object('shopping-carts/' + cartId + '/items/' + productId);\n  }\n\n  async clearCart() {\n    const cartId = await this.getOrCreateCart();\n    this.db.object('shopping-carts/' + cartId + '/items').remove();\n  }\n\n  private async getOrCreateCart(): Promise<string> {\n    let cartId = localStorage.getItem('cartId');\n    if (cartId) {\n      return cartId;\n    }\n    let result = await this.create();\n    localStorage.setItem('cartId', result.key);\n    return result.key;\n  }\n\n  private async changeQuantity(key: string, change: number, productTitle: string, productPrice: string, productImageUrl: string) {\n    let cartId = await this.getOrCreateCart();\n    let item$ = this.getItem(cartId, key);\n    item$.valueChanges().pipe(take(1)).subscribe(item => {\n      if (item) {\n        item$.update({\n          productKey: key,\n          quantity: (item.quantity) + change,\n          title: productTitle,\n          price: productPrice,\n          imageUrl: productImageUrl\n        });\n        item$.valueChanges().subscribe(newItem => {\n          if (newItem.quantity === 0) {\n            item$.remove();\n          }\n        });\n      } else {\n        item$.update({\n          productKey: key,\n          quantity: 1,\n          title: productTitle,\n          price: productPrice,\n          imageUrl: productImageUrl\n        });\n      }\n    });\n  }\n}\n\n","import {Component, OnInit} from '@angular/core';\nimport {Order} from '../../Models/order';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {OrderService} from '../../services/order.service';\nimport {AuthenticationService} from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './admin-orders.component.html',\n  styleUrls: ['./admin-orders.component.css']\n})\nexport class AdminOrdersComponent implements OnInit {\n\n  orders: Order[];\n  dataSource: MatTableDataSource<Order>;\n  displayedColumns = ['name', 'datePlaced'];\n  userId: string;\n\n  constructor(private orderService: OrderService, private authService: AuthenticationService) {\n    this.authService.getUser().subscribe(user => {\n      this.userId = user.uid;\n      this.orderService.getOrders()\n        .valueChanges()\n        .subscribe(orders => {\n          this.orders = orders;\n          this.dataSource = new MatTableDataSource<Order>(this.orders);\n        });\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"order\">\n  <h1 class=\"mat-card-header\">Manage Orders</h1>\n  <div>\n    <table mat-table matSort [dataSource]=\"dataSource\">\n\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Name</th>\n        <td class=\"text-start\" mat-cell *matCellDef=\"let order\">\n          {{ order.shipping.name }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"datePlaced\">\n        <th class=\"text-end\" mat-header-cell *matHeaderCellDef>Date Placed</th>\n        <td class=\"text-end\" mat-cell\n            *matCellDef=\"let order\"> {{ order.datePlaced| date }} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n</mat-card>\n","import {ShoppingCartItem} from './shopping-cart-item';\nimport {Product} from './product';\n\nexport class ShoppingCart {\n\n  constructor(public items: ShoppingCartItem[]) {\n  }\n\n  get productIds() {\n    return Object.keys(this.items);\n  }\n\n  getAll(): ShoppingCartItem[] {\n    let all = [];\n    for (const key in this.items) {\n      all.push(this.items[key]);\n    }\n    return all;\n  }\n\n  getQuantity(productKey) {\n    if (this.isEmpty()) {\n      return 0;\n    }\n    let item = this.items[productKey];\n    return item ? item.quantity : 0;\n  }\n\n  get totalItemsQuantity() {\n    let count = 0;\n    for (const productKey in this.items) {\n      count += this.items[productKey].quantity;\n    }\n    return count;\n  }\n\n  isEmpty() {\n    if (this.items) {\n      return false;\n    }\n    return true;\n  }\n}\n","<mat-card class=\"item\">\n  <div style=\"height: 200px\">\n    <img class=\"img-fluid\" src=\"{{ product.value.imageUrl }}\">\n  </div>\n  <mat-card-title>{{ product.value.title}}</mat-card-title>\n  <mat-card-title>{{ product.value.price | currency}}</mat-card-title>\n  <mat-card-header>{{ product.value.category}}</mat-card-header>\n  <div *ngIf=\"showActions && shoppingCart\">\n    <button\n      (click)=\"addToCart()\"\n      mat-flat-button\n      color=\"accent\"\n      *ngIf=\"shoppingCart.getQuantity(product.key)===0 else updateQuantity\"\n    >Add to Cart\n    </button>\n    <ng-template #updateQuantity>\n      <product-quantity\n        [shopping-cart]=\"shoppingCart\"\n        [product]=\"product\"\n      ></product-quantity>\n    </ng-template>\n  </div>\n</mat-card>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Product} from '../Models/product';\nimport {ShoppingCartService} from '../services/shopping-cart.service';\nimport {ShoppingCart} from '../Models/shopping-cart';\n\n@Component({\n  selector: 'product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.css']\n})\nexport class ProductCardComponent {\n  @Input('product') product: { key: string, value: Product };\n  @Input('shopping-cart') shoppingCart: ShoppingCart;\n  @Input('show-actions') showActions = true;\n\n  constructor(private shopCartService: ShoppingCartService) {\n  }\n\n  addToCart() {\n    this.shopCartService.addToCart(this.product.key,\n      this.product.value.title,\n      this.product.value.price,\n      this.product.value.imageUrl);\n  }\n}\n","<div class=\"container-custom\">\n  <mat-card class=\"mat-elevation-z4 categories\">\n    <button\n      color=\"primary\"\n      routerLink=\"\"\n      [queryParams]=\"{category:'all'}\"\n      [class.active]=\"selectedCategory==='all'\"\n      mat-flat-button>\n      All Categories\n    </button>\n    <button routerLink=\"\" [queryParams]=\"{category:category.name}\"\n            color=\"primary\"\n            [class.active]=\"(selectedCategory===category.name)\"\n            (click)=\"filterCategory(category.name)\"\n            mat-flat-button\n            *ngFor=\"let category of categories$\">{{ category.name }}</button>\n  </mat-card>\n  <mat-card class=\"container mat-elevation-z2\">\n    <product-card *ngFor=\"let product of filteredProducts\" [product]=\"product\"\n                  [shopping-cart]=\"cart\"></product-card>\n  </mat-card>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ProductService} from '../services/product.service';\nimport {Product} from '../Models/product';\nimport {CategoriesService} from '../services/categories.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ShoppingCartService} from '../services/shopping-cart.service';\nimport {ShoppingCart} from '../Models/shopping-cart';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit, OnDestroy {\n  productList: { key: string, value: Product } [] = [];\n  filteredProducts;\n  categories$;\n  selectedCategory;\n\n  productSubscription;\n  cartSubscription;\n\n  cart: ShoppingCart;\n\n  constructor(\n    private productService: ProductService,\n    private categoryService: CategoriesService,\n    private route: ActivatedRoute,\n    private shoppingCartService: ShoppingCartService\n  ) {\n  }\n\n  async ngOnInit() {\n    let response = (await this.shoppingCartService.getCart());\n    response.subscribe(cart => {\n      this.cart = cart;\n    });\n\n    this.productSubscription = this.productService.getAll().snapshotChanges()\n      .subscribe(products => {\n          products.forEach(product => {\n              this.productList.push({\n                key: product.key,\n                value: {\n                  title: product.payload.val().title,\n                  price: product.payload.val().price,\n                  category: product.payload.val().category,\n                  imageUrl: product.payload.val().imageUrl\n                }\n              });\n            }\n          );\n          this.categoryService.getCategories().valueChanges()\n            .subscribe(categories => {\n              this.categories$ = categories;\n            });\n          this.route.queryParamMap.subscribe(category => {\n            this.selectedCategory = category.get('category');\n            if (this.selectedCategory === null) {\n              this.selectedCategory = 'all';\n            }\n            this.filteredProducts = this.productList;\n            this.filterCategory(this.selectedCategory);\n          });\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.productSubscription.unsubscribe();\n  }\n\n  filterCategory(category: string) {\n    if (category === 'all') {\n      this.filteredProducts = this.productList;\n      this.selectedCategory = 'all';\n    } else {\n      this.filteredProducts = this.productList\n        .filter(p => p.value.category.toLowerCase() === category.toLowerCase());\n      this.selectedCategory = category;\n    }\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyCsiOd4s2msSUkVafz3bT6hgNykVpeY8BY',\n    authDomain: 'shopping-demo-3421c.firebaseapp.com',\n    databaseURL: 'https://shopping-demo-3421c-default-rtdb.firebaseio.com',\n    projectId: 'shopping-demo-3421c',\n    storageBucket: 'shopping-demo-3421c.appspot.com',\n    messagingSenderId: '508294228734',\n    appId: '1:508294228734:web:c7a192973cc33c0b0853af',\n    measurementId: 'G-V01FXJGSNE'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {AngularFireDatabase, AngularFireList, AngularFireObject} from '@angular/fire/database';\nimport {map} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {Product} from '../Models/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private db: AngularFireDatabase, private router: Router) {\n  }\n\n  getAll(): AngularFireList<Product> {\n    return this.db.list('/products');\n  }\n\n  getProduct(id: string): AngularFireObject<Product> {\n    return this.db.object('/products/' + id);\n  }\n\n  getNumberOfProducts(): number {\n    this.getAll().valueChanges().subscribe(products => {\n\n    });\n    return 0;\n  }\n\n  create(product) {\n    this.db.list('/products').push(product);\n  }\n\n  update(product, productID) {\n    return this.db.object('/products/' + productID).update(product);\n  }\n\n  delete(id: string) {\n    this.db.object('/products/' + id).remove().then(response => {\n      this.router.navigate(['admin/products']);\n    });\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ProductService} from '../../services/product.service';\nimport {timer} from 'rxjs';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {CategoriesService} from '../../services/categories.service';\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n  id: string;\n  product: {\n    title: string,\n    price: string,\n    category: string,\n    imageUrl: string,\n  };\n\n  categories$;\n\n  saving: boolean;\n  deleting: boolean;\n\n  placeHolderImageUrl = 'https://t4.ftcdn.net/jpg/02/07/87/79/360_F_207877921_BtG6ZKAVvtLyc5GWpBNEIlIxsffTtWkv.jpg';\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private productService: ProductService,\n    private categoryService: CategoriesService,\n    private snackBar: MatSnackBar\n  ) {\n    this.categoryService.getCategories().valueChanges()\n      .subscribe(categories => {\n        this.categories$ = categories;\n      });\n\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(response => {\n      this.id = response.get('id');\n    });\n\n    if (this.id.startsWith('new')) {\n      this.product = {\n        title: '',\n        price: '',\n        category: '',\n        imageUrl: '',\n      }\n      ;\n      console.log(this.id);\n    } else {\n      this.productService.getProduct(this.id).valueChanges()\n        .subscribe(product => {\n          if (product) {\n            console.log(product);\n            this.product = {\n              title: product.title,\n              price: product.price,\n              category: product.category,\n              imageUrl: product.imageUrl,\n            };\n          } else {\n            this.return();\n          }\n        });\n    }\n  }\n\n  return(): void {\n    this.router.navigate(['**']);\n  }\n\n  save(product) {\n    this.saving = true;\n    timer(1000).subscribe(response => {\n      this.saving = false;\n      if (this.id === 'new') {\n        this.productService.create(product);\n      } else {\n        this.productService.update(product, this.id);\n      }\n      this.snackBar.open('Saved', '', {duration: 2000});\n      this.router.navigate(['admin/products']);\n    });\n\n  }\n\n  delete() {\n    if (!confirm('Are you sure you want to delete this product')) {\n      return;\n    }\n    this.deleting = true;\n    timer(1000).subscribe(response => {\n      this.deleting = false;\n      this.productService.delete(this.id);\n      this.snackBar.open('Deleted', '', {duration: 2000});\n      this.router.navigate(['/admin/products']);\n    });\n  }\n}\n","<div class=\"d-flex\">\n  <mat-card>\n    <div class=\"flex-shrink-0\">\n      <img ng *ngIf=\"imageUrl.value!=''\" class=\"img-fluid\" src=\"{{ imageUrl.value }}\">\n      <img *ngIf=\"imageUrl.value==''\" src=\"{{ placeHolderImageUrl }}\">\n    </div>\n    <mat-card-title>{{ title.value }}</mat-card-title>\n    <mat-card-title>{{ price.value | currency}}</mat-card-title>\n    <mat-card-header>{{ category.value }}</mat-card-header>\n  </mat-card>\n  <div class=\"flex-grow-1 ms-3\">\n    <form #f=\"ngForm\">\n      <div class=\"form-container\">\n        <div>\n          <mat-form-field style=\"width: 35vw\" color=\"primary\" appearance=\"outline\">\n            <mat-label>Title</mat-label>\n            <input\n              [(ngModel)]=\"product.title\"\n              #title=\"ngModel\"\n              name=\"title\"\n              required\n              matInput>\n            <mat-error *ngIf=\"title.invalid && title.errors.required\">You must enter a title!</mat-error>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field color=\"primary\" appearance=\"outline\">\n            <mat-label>Price</mat-label>\n            <input\n              [(ngModel)]=\"product.price\"\n              #price=\"ngModel\"\n              name=\"price\"\n              required\n              type=\"number\"\n              [min]=\"0\"\n              matInput>\n            <span matPrefix>$</span>\n            <mat-error *ngIf=\"price.invalid\">\n              <div *ngIf=\"price.errors.required\">You must enter a price!</div>\n              <div *ngIf=\"price.errors.min\">Price must be at least 0!</div>\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field color=\"primary\" appearance=\"outline\">\n            <mat-label>Image Url</mat-label>\n            <input\n              [(ngModel)]=\"product.imageUrl\"\n              #imageUrl=\"ngModel\"\n              name=\"imageUrl\"\n              required\n              url\n              matInput>\n            <mat-error *ngIf=\"imageUrl.invalid\">\n              <div *ngIf=\"imageUrl.errors.required\">You must enter an image URL!</div>\n              <div *ngIf=\"imageUrl.errors.url\">Invalid Url</div>\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field color=\"primary\" appearance=\"outline\">\n            <mat-label>Category</mat-label>\n            <mat-select [(ngModel)]=\"product.category\" name=\"category\" #category=\"ngModel\">\n              <mat-option></mat-option>\n              <mat-option *ngFor=\"let category of categories$\" [value]=\"category.name\">{{ category.name }}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div>\n          <button [disabled]=\"!f.valid\" color=\"primary\" mat-flat-button (click)=\"save(f.value)\">Save</button>\n          <button [disabled]=\"!f.valid\" color=\"warn\" mat-flat-button (click)=\"delete()\">Delete</button>\n        </div>\n        <mat-progress-spinner color=\"primary\" *ngIf=\"saving\" mode=\"indeterminate\"></mat-progress-spinner>\n        <mat-progress-spinner color=\"warn\" *ngIf=\"deleting\" mode=\"indeterminate\"></mat-progress-spinner>\n      </div>\n    </form>\n  </div>\n</div>\n\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router, RouterState, RouterStateSnapshot} from '@angular/router';\nimport {AuthenticationService} from './authentication.service';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthenticationService, private router: Router) {\n  }\n\n  canActivate(route, state: RouterStateSnapshot) {\n    return this.auth.getUser().pipe(map(user => {\n      if (user) {\n        return true;\n      } else {\n        this.router.navigate(['login'], {queryParams: {returnUrl: state.url}});\n        return false;\n      }\n    }));\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-success',\n  templateUrl: './order-success.component.html',\n  styleUrls: ['./order-success.component.css']\n})\nexport class OrderSuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 style=\"margin: 15%\">order-success works!</h1>\n","import {Component} from '@angular/core';\nimport {AuthenticationService} from './services/authentication.service';\nimport {Router} from '@angular/router';\nimport {UserService} from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private auth: AuthenticationService, router: Router, private userService: UserService) {\n    auth.getUser().subscribe(user => {\n        if (!user) {\n          return;\n        }\n\n        userService.save(user);\n        const returnUrl = localStorage.getItem('returnUrl');\n\n        if (!returnUrl) {\n          return;\n        }\n        localStorage.removeItem('returnUrl');\n        router.navigateByUrl(returnUrl);\n      }\n    )\n    ;\n  }\n}\n","<navbar></navbar>\n<router-outlet></router-outlet>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ShoppingCartService} from '../services/shopping-cart.service';\nimport {Product} from '../Models/product';\nimport {ShoppingCart} from '../Models/shopping-cart';\n\n@Component({\n  selector: 'product-quantity',\n  templateUrl: './product-quantity.component.html',\n  styleUrls: ['./product-quantity.component.css']\n})\nexport class ProductQuantityComponent {\n\n  @Input('product') product: { key: string, value: Product };\n  @Input('shopping-cart') shoppingCart: ShoppingCart;\n\n  constructor(private shopCartService: ShoppingCartService) {\n  }\n\n  addToCart() {\n    this.shopCartService.addToCart(this.product.key,\n      this.product.value.title,\n      this.product.value.price,\n      this.product.value.imageUrl);\n  }\n\n  removeFromCart() {\n    this.shopCartService.removeFromCart(\n      this.product.key,\n      this.product.value.title,\n      this.product.value.price,\n      this.product.value.imageUrl\n    );\n  }\n}\n","<div class=\"quantity\">\n  <button (click)=\"removeFromCart()\" color=\"warn\" mat-flat-button>-</button>\n  <mat-label class=\"mat-label\">{{ shoppingCart.getQuantity(product.key) }}</mat-label>\n  <button (click)=\"addToCart()\" color=\"primary\" mat-flat-button>+</button>\n</div>\n","import {AfterViewInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ProductService} from '../../services/product.service';\nimport {Router} from '@angular/router';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Product} from '../../Models/product';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport * as _ from 'lodash';\nimport {ShoppingCartService} from '../../services/shopping-cart.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\n\nexport class ProductsComponent implements OnInit, OnDestroy {\n  dataSource = new MatTableDataSource<{ key: string, value: Product }>();\n  productList: {\n    key: string,\n    value: Product\n  }[];\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  filteredProducts;\n  displayedColumns = ['value.title', 'value.price', 'value.category', 'edit'];\n  subscription;\n  cart;\n\n  constructor(private productService: ProductService, private router: Router, private shoppingCartService: ShoppingCartService) {\n    this.productList = [];\n  }\n\n  async ngOnInit() {\n    this.subscription = this.getProductList();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  addProduct() {\n    this.router.navigate(['edit-product/new']);\n  }\n\n  getProductList() {\n    return this.productService.getAll().snapshotChanges()\n      .subscribe(products => {\n        products.forEach(product => {\n          this.productList.push({\n            key: product.key,\n            value: {\n              title: product.payload.val().title,\n              price: product.payload.val().price,\n              category: product.payload.val().category,\n              imageUrl: product.payload.val().imageUrl\n            }\n          });\n          this.filteredProducts = this.productList;\n          this.setDataSource();\n        });\n      });\n  }\n\n  setDataSource() {\n    this.dataSource = new MatTableDataSource<{ key: string, value: Product }>(this.filteredProducts);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = _.get;\n  }\n\n  filter(query: string) {\n    this.filteredProducts = (query) ?\n      this.productList.filter(p => p.value.title.toLowerCase().includes(query.toLowerCase())) :\n      this.productList;\n    this.setDataSource();\n  }\n}\n","<div class=\"d-flex\">\n  <form class=\"form-control form-container\">\n    <div class=\"flex-grow-1 ms-3\">\n      <div class=\"mb-3\">\n        <button color=\"primary\" mat-flat-button (click)=\"addProduct()\">New Product</button>\n      </div>\n      <div>\n        <mat-form-field style=\"width: 45vw\">\n          <mat-label>Search...</mat-label>\n          <input\n            #query\n            (keyup)=\"filter(query.value)\"\n            matInput\n          >\n        </mat-form-field>\n      </div>\n      <div [hidden]=\"productList.length<=0\">\n        <table mat-table matSort class=\"mat-elevation-z8\" [dataSource]=\"dataSource\">\n\n          <ng-container matColumnDef=\"value.title\">\n            <th mat-header-cell mat-sort-header *matHeaderCellDef>Title</th>\n            <td mat-cell *matCellDef=\"let product\"> {{product.value.title}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"value.price\">\n            <th mat-header-cell mat-sort-header *matHeaderCellDef>Price</th>\n            <td mat-cell *matCellDef=\"let product\"> {{product.value.price | currency}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"value.category\">\n            <th mat-header-cell mat-sort-header *matHeaderCellDef>Category</th>\n            <td mat-cell *matCellDef=\"let product\"> {{product.value.category}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>Edit</th>\n            <td mat-cell *matCellDef=\"let product\"><a routerLink=\"/edit-product/{{ product.key }}\">edit</a></td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 15, 20, 50]\" showFirstLastButtons></mat-paginator>\n      </div>\n    </div>\n  </form>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ShoppingCart} from '../Models/shopping-cart';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ShoppingCartItem} from '../Models/shopping-cart-item';\nimport {Observable} from 'rxjs';\nimport {ShoppingCartService} from '../services/shopping-cart.service';\n\n@Component({\n  selector: 'shopping-cart-summary',\n  templateUrl: './shopping-cart-summary.component.html',\n  styleUrls: ['./shopping-cart-summary.component.css']\n})\nexport class ShoppingCartSummaryComponent implements OnInit {\n  @Input('subTotal') subTotal: number;\n  dataSource: MatTableDataSource<ShoppingCartItem>;\n  displayedColumns = ['product', 'price'];\n  cart$: Observable<ShoppingCart>;\n  cart: ShoppingCart;\n\n  constructor(private shoppingCartService: ShoppingCartService) {\n  }\n\n  async ngOnInit() {\n    this.shoppingCartService.getCart().then(cart => {\n      this.cart$ = cart;\n      this.setDataSource();\n    });\n  }\n\n  setDataSource() {\n    this.cart$.subscribe(cart => {\n      this.cart = cart;\n      this.dataSource = new MatTableDataSource<ShoppingCartItem>(cart.getAll());\n    });\n  }\n}\n","<mat-card class=\"order\">\n  <h1 class=\"mat-card-header\">Order Summary</h1>\n  <div>\n    <table mat-table matSort [dataSource]=\"dataSource\">\n\n      <ng-container matColumnDef=\"product\">\n        <th mat-header-cell *matHeaderCellDef>Product</th>\n        <td class=\"text-start\" mat-cell *matCellDef=\"let product\">\n          {{ product.quantity }} x\n          {{ (product.title) }}\n        </td>\n        <td class=\"text-start\" mat-footer-cell *matFooterCellDef>Sub-Total</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n        <th class=\"text-end\" mat-header-cell *matHeaderCellDef>Price</th>\n        <td class=\"text-end\" mat-cell *matCellDef=\"let product\"> {{ product.quantity * product.price |currency }} </td>\n        <td class=\"text-end\" mat-footer-cell *matFooterCellDef>{{ subTotal| currency }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n\n    </table>\n  </div>\n</mat-card>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './navbar/navbar.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HomeComponent} from './home/home.component';\nimport {LoginComponent} from './login/login.component';\nimport {ShoppingCartComponent} from './shopping-cart/shopping-cart.component';\nimport {AngularFireModule} from '@angular/fire';\nimport {environment} from '../environments/environment';\nimport {AngularFireAuthModule} from '@angular/fire/auth';\nimport {MyOrdersComponent} from './my-orders/my-orders.component';\nimport {ProductsComponent} from './admin/products/products.component';\nimport {AdminOrdersComponent} from './admin/admin-orders/admin-orders.component';\nimport {CheckOutComponent} from './check-out/check-out.component';\nimport {AuthenticationService} from './services/authentication.service';\nimport {AuthGuard} from './services/auth-guard.service';\nimport {UserService} from './services/user.service';\nimport {AccessDeniedComponent} from './access-denied/access-denied.component';\nimport {AdminAuthGaurd} from './admin-auth-gaurd.service';\nimport {EditProductComponent} from './admin/edit-product/edit-product.component';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {FormsModule} from '@angular/forms';\nimport {CustomFormsModule} from 'ng2-validation';\nimport {ProductCardComponent} from './product-card/product-card.component';\nimport {AngularMaterialModule} from './angular-material.module';\nimport {ShoppingCartService} from './services/shopping-cart.service';\nimport { ProductQuantityComponent } from './product-quantity/product-quantity.component';\nimport { OrderSuccessComponent } from './order-success/order-success.component';\nimport { ShoppingCartSummaryComponent } from './shopping-cart-summary/shopping-cart-summary.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    LoginComponent,\n    ShoppingCartComponent,\n    MyOrdersComponent,\n    ProductsComponent,\n    AdminOrdersComponent,\n    CheckOutComponent,\n    AccessDeniedComponent,\n    EditProductComponent,\n    PageNotFoundComponent,\n    ProductCardComponent,\n    ProductQuantityComponent,\n    OrderSuccessComponent,\n    ShoppingCartSummaryComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    CustomFormsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularMaterialModule\n  ],\n  providers: [\n    AuthenticationService,\n    AuthGuard,\n    UserService,\n    AdminAuthGaurd,\n    ShoppingCartService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {Observable, of} from 'rxjs';\nimport firebase from 'firebase';\nimport {ActivatedRoute, Route, Router} from '@angular/router';\nimport {switchMap} from 'rxjs/operators';\nimport {UserService} from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private userService: UserService, private afAuth: AngularFireAuth, private route: ActivatedRoute, private router: Router) {\n  }\n\n  login() {\n    let returnUrl = this.route.snapshot.queryParamMap.get('returnUrl') || '/';\n    localStorage.setItem('returnUrl', returnUrl);\n    this.afAuth.signInWithRedirect(new firebase.auth.GoogleAuthProvider());\n  }\n\n  logout() {\n    this.afAuth.signOut();\n    this.router.navigate(['login']);\n  }\n\n  getUser() {\n    return this.afAuth.authState;\n  }\n\n  get appUser$() {\n    return this.getUser().pipe(switchMap(\n      user => {\n        if (user) {\n          return this.userService.get(user.uid).valueChanges();\n        }\n        return of(null);\n      }));\n  }\n}\n","import { AfterViewInit, Component, OnDestroy } from '@angular/core';\nimport { ShoppingCartService } from '../services/shopping-cart.service';\nimport { Observable } from 'rxjs';\nimport { ShoppingCart } from '../Models/shopping-cart';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ProductService } from '../services/product.service';\nimport { ShoppingCartItem } from '../Models/shopping-cart-item';\nimport { Product } from '../Models/product';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\n\nexport class ShoppingCartComponent implements OnDestroy, AfterViewInit {\n  cart$: Observable<ShoppingCart>;\n  productList = [];\n  dataSource;\n  totalQuantity = 0;\n  displayedColumns = ['product', 'quantity', 'price'];\n  subscription;\n\n  constructor(private shoppingCartService: ShoppingCartService, private productService: ProductService) {\n  }\n\n  setDataSource() {\n\n    this.subscription = this.cart$.subscribe(products => {\n      this.productList = products.getAll();\n      this.totalQuantity = products.totalItemsQuantity;\n      this.dataSource = new MatTableDataSource(this.productList);\n    });\n  }\n\n  getSubTotal(): number {\n    let total = 0;\n    for (let product of this.productList) {\n      total += product.price * product.quantity;\n    }\n    return total;\n  }\n\n  ngAfterViewInit() {\n    this.shoppingCartService.getCart().then(cart => {\n      this.cart$ = cart;\n      this.setDataSource();\n    });\n  }\n\n  ngOnDestroy() {\n  }\n\n  addToCart(product: ShoppingCartItem) {\n    this.shoppingCartService.addToCart(\n      product.productKey,\n      product.title,\n      product.price,\n      product.imageUrl\n    );\n  }\n\n  removeFromCart(product: ShoppingCartItem) {\n    this.shoppingCartService.removeFromCart(\n      product.productKey,\n      product.title,\n      product.price,\n      product.imageUrl\n    );\n  }\n\n  clearCart() {\n    this.shoppingCartService.clearCart();\n  }\n}\n","<mat-card class=\"mat-elevation-z2\">\n  <h1 class=\"mat-card-header\">Shopping Cart</h1>\n  <p mat-card-content style=\"position: absolute\">You have {{ this.totalQuantity }} items in your cart.</p>\n  <button mat-flat-button color=\"warn\" class=\"mainBtn\" (click)=\"clearCart()\">Clear Shopping Cart\n  </button>\n  <div>\n    <table mat-table matSort [dataSource]=\"dataSource\">\n      <ng-container matColumnDef=\"product\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td class=\"text-start\" mat-cell *matCellDef=\"let product\">\n          <img class=\"img-fluid\" src=\"{{ product.imageUrl }}\">\n          {{ (product.title) }}\n        </td>\n        <td class=\"text-start\" mat-footer-cell *matFooterCellDef>Sub-Total</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"quantity\">\n        <th class=\"text-center\" mat-header-cell *matHeaderCellDef>Quantity</th>\n        <td class=\"text-center\" mat-cell *matCellDef=\"let product\">\n          <button mat-flat-button class=\"quantity\" color=\"warn\" (click)=\"removeFromCart(product)\">-</button>\n          {{ product.quantity }}\n          <button mat-flat-button class=\"quantity\" color=\"primary\" (click)=\"addToCart(product)\">+</button>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n        <th class=\"text-end\" mat-header-cell *matHeaderCellDef>Price</th>\n        <td class=\"text-end\" mat-cell *matCellDef=\"let product\"> {{ product.quantity * product.price |currency }} </td>\n        <td class=\"text-end\" mat-footer-cell *matFooterCellDef>{{ getSubTotal()| currency }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n\n    </table>\n  </div>\n  <button\n    [disabled]=\"totalQuantity==0\"\n    routerLink=\"/check-out/\"\n    mat-flat-button\n    class=\"mainBtn\"\n    color=\"primary\">\n    Check Out\n  </button>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-access-denied',\n  templateUrl: './access-denied.component.html',\n  styleUrls: ['./access-denied.component.css']\n})\nexport class AccessDeniedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>ACCESS DENIED!</h1>\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {map, switchMap} from 'rxjs/operators';\nimport {AuthenticationService} from './services/authentication.service';\nimport {UserService} from './services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGaurd implements CanActivate {\n\n  constructor(private auth: AuthenticationService, private router: Router, private userService: UserService) {\n  }\n\n  canActivate() {\n\n    return this.auth.appUser$\n      .pipe(map(appUser => {\n        if (appUser.isAdmin) {\n          return true;\n        } else {\n          this.router.navigate(['access-denied']);\n        }\n      }));\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AngularFireDatabase, AngularFireList} from '@angular/fire/database';\nimport {ShoppingCartService} from './shopping-cart.service';\nimport {Order} from '../Models/order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  constructor(private db: AngularFireDatabase, private shoppingCartService: ShoppingCartService) {\n  }\n\n  async placeOrder(order) {\n    const result = await this.db.list('/orders').push(order);\n    this.shoppingCartService.clearCart();\n    return result;\n  }\n\n  getOrders(): AngularFireList<Order> {\n    return this.db.list('/orders');\n  }\n\n  getOrdersByUser(userId: string): AngularFireList<Order> {\n    return this.db.list('/orders', query => {\n      return query.orderByChild('userId').equalTo(userId);\n    });\n  }\n}\n","<nav class=\"navbar navbar-expand-lg fixed-top\">\n  <div class=\"container-fluid\">\n    <div class=\"collapse navbar-collapse justify-content-md-center\" id=\"navbarsExample10\">\n      <img class=\"img-logo\" src=\"{{ imgLogoUrl }}\" routerLink=\"/\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"shopping-cart\">\n            Shopping Cart\n            <span\n              matBadgeColor=\"accent\"\n              matBadge=\"{{ totalQuantity }}\"\n              matBadgeOverlap=\"false\"\n              matBadgePosition=\"above\"\n              matBadgeSize=\"medium\">\n              </span>\n          </a>\n        </li>\n        <li *ngIf=\"!(user)\" class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"login\">Login</a>\n        </li>\n        <li *ngIf=\"user\">\n          <a class=\"nav-link\" [mat-menu-trigger-for]=\"menu\">{{ user.name }}\n            <mat-icon>expand_more</mat-icon>\n          </a>\n          <mat-menu #menu=\"matMenu\">\n            <a routerLink=\"my-orders\" class=\"dropdown-item\">My Orders</a>\n            <a *ngIf=\"user.isAdmin\" routerLink=\"admin/admin-orders\" class=\"dropdown-item\">Manage Orders</a>\n            <a *ngIf=\"user.isAdmin\" routerLink=\"admin/products\" class=\"dropdown-item\">Manage Products</a>\n            <a (click)=\"logout()\" class=\"dropdown-item\">Logout</a>\n          </mat-menu>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../services/authentication.service';\nimport {Observable} from 'rxjs';\nimport firebase from 'firebase';\nimport {AppUser} from '../Models/app-user';\nimport {ShoppingCartService} from '../services/shopping-cart.service';\nimport {ShoppingCart} from '../Models/shopping-cart';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  user: AppUser;\n  cart$: Observable<ShoppingCart>;\n  totalQuantity = 0;\n\n  imgLogoUrl = 'https://seeklogo.com/images/G/grocery-store-logo-3B65A40953-seeklogo.com.png';\n\n  constructor(private authService: AuthenticationService, private shoppingCartService: ShoppingCartService) {\n    authService.appUser$.subscribe(appUser => this.user = appUser);\n  }\n\n  async ngOnInit() {\n    this.cart$ = await this.shoppingCartService.getCart();\n    this.cart$.subscribe(cart => this.totalQuantity = cart.totalItemsQuantity);\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Shipping} from '../Models/shipping';\nimport {ShoppingCartService} from '../services/shopping-cart.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Observable, timer} from 'rxjs';\nimport {ShoppingCart} from '../Models/shopping-cart';\nimport {OrderService} from '../services/order.service';\nimport {AuthenticationService} from '../services/authentication.service';\nimport {Order} from '../Models/order';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'check-out',\n  templateUrl: './check-out.component.html',\n  styleUrls: ['./check-out.component.css']\n})\nexport class CheckOutComponent implements OnInit, OnDestroy {\n  shipping: Shipping = {name: '', address1: '', address2: '', city: ''};\n  cart$: Observable<ShoppingCart>;\n  cart: ShoppingCart;\n  cartSubscription;\n  userSubscription;\n\n  orderPlaced = false;\n\n  productList = [];\n  totalQuantity: number;\n  dataSource;\n  userId;\n\n  displayedColumns = ['product', 'price'];\n\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private orderService: OrderService,\n    private authService: AuthenticationService,\n    private snackBar: MatSnackBar,\n    private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.shoppingCartService.getCart().then(cart => {\n      this.cart$ = cart;\n      this.setDataSource();\n    });\n    this.userSubscription = this.authService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  ngOnDestroy() {\n    this.cartSubscription.unsubscribe();\n    this.userSubscription.unsubscribe();\n  }\n\n  setDataSource() {\n    this.cartSubscription = this.cart$.subscribe(products => {\n      this.cart = products;\n      this.productList = products.getAll();\n      this.totalQuantity = products.totalItemsQuantity;\n      this.dataSource = new MatTableDataSource(this.productList);\n    });\n  }\n\n  getSubTotal(): number {\n    let total = 0;\n    for (let product of this.productList) {\n      total += product.price * product.quantity;\n    }\n    return total;\n  }\n\n  async placeOrder() {\n    const order = new Order(this.userId, this.shipping, this.cart, this.getSubTotal());\n    let result = await this.orderService.placeOrder(order);\n    this.orderPlaced = true;\n    timer(1300).subscribe(response => {\n      this.snackBar.open('Order Placed', '', {duration: 2000});\n      this.router.navigate(['/order-success', result.key]);\n    });\n  }\n}\n","<mat-card class=\"shipping\">\n  <h1 class=\"mat-card-header\">Shipping</h1>\n  <form #f=\"ngForm\">\n    <div class=\"form-container\">\n      <div>\n        <mat-form-field>\n          <mat-label>Name</mat-label>\n          <input\n            matInput\n            [(ngModel)]=\"shipping.name\"\n            #name=\"ngModel\"\n            name=\"name\"\n            required\n            maxlength=\"25\"\n          >\n          <mat-error *ngIf=\"name.invalid && name.errors.required\">Please enter your name.</mat-error>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field>\n          <mat-label>Address: Line 1</mat-label>\n          <input\n            matInput\n            [(ngModel)]=\"shipping.address1\"\n            #address1=\"ngModel\"\n            name=\"address1\"\n            required\n            maxlength=\"25\"\n          >\n          <mat-error *ngIf=\"address1.invalid && address1.errors.required\">Please enter your address.</mat-error>\n        </mat-form-field>\n        <div>\n          <mat-form-field>\n            <mat-label>Address: Line 2</mat-label>\n            <input\n              matInput\n              [(ngModel)]=\"shipping.address2\"\n              #address1=\"ngModel\"\n              name=\"address2\"\n              maxlength=\"25\"\n            >\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field>\n            <mat-label>City</mat-label>\n            <input\n              matInput\n              [(ngModel)]=\"shipping.city\"\n              #city=\"ngModel\"\n              required\n              name=\"city\"\n              maxlength=\"25\"\n            >\n            <mat-error *ngIf=\"city.invalid && city.errors.required\">Please enter your city.</mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n  </form>\n  <button mat-flat-button [disabled]=\"!f.valid\" color=\"primary\" style=\"font-size: 22px; float: right\"\n          (click)=\"placeOrder()\">Place Order\n  </button>\n</mat-card>\n\n<shopping-cart-summary [subTotal]=\"getSubTotal()\"></shopping-cart-summary>\n\n<mat-progress-spinner\n  style=\"position:absolute; bottom: 15%;left: 45%\"\n  color=\"primary\"\n  *ngIf=\"orderPlaced\"\n  mode=\"indeterminate\">\n</mat-progress-spinner>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {OrderService} from '../services/order.service';\nimport {Order} from '../Models/order';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {AuthenticationService} from '../services/authentication.service';\n\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})\n\nexport class MyOrdersComponent implements OnInit {\n\n  orders: Order[];\n  dataSource: MatTableDataSource<Order>;\n  displayedColumns = ['name', 'datePlaced'];\n  userId: string;\n\n  constructor(private orderService: OrderService, private authService: AuthenticationService) {\n    this.authService.getUser().subscribe(user => {\n      this.userId = user.uid;\n      this.orderService.getOrdersByUser(this.userId)\n        .valueChanges()\n        .subscribe(orders => {\n          this.orders = orders;\n          this.dataSource = new MatTableDataSource<Order>(this.orders);\n        });\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"order\">\n  <h1 class=\"mat-card-header\">My Orders</h1>\n  <div>\n    <table mat-table matSort [dataSource]=\"dataSource\">\n\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Name</th>\n        <td class=\"text-start\" mat-cell *matCellDef=\"let order\">\n          {{ order.shipping.name }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"datePlaced\">\n        <th class=\"text-end\" mat-header-cell *matHeaderCellDef>Date Placed</th>\n        <td class=\"text-end\" mat-cell\n            *matCellDef=\"let order\"> {{ order.datePlaced| date }} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n</mat-card>\n","import {Injectable} from '@angular/core';\nimport {AngularFireDatabase, AngularFireObject} from '@angular/fire/database';\nimport firebase from 'firebase';\nimport {Observable} from 'rxjs';\nimport {AppUser} from '../Models/app-user';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private db: AngularFireDatabase) {\n  }\n\n  save(user: firebase.User) {\n    this.db.object('/users/' + user.uid).update({\n      name: user.displayName,\n      email: user.email\n    });\n  }\n\n  get(uid: string): AngularFireObject<AppUser> {\n    return this.db.object('/users/' + uid);\n  }\n\n  isAdmin(uid: string) {\n    let user: boolean;\n    this.get(uid).valueChanges().subscribe();\n    console.log(user);\n    return user;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>ERROR: PAGE NOT FOUND</h1>\n","import {NgModule} from '@angular/core';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatOptionModule} from '@angular/material/core';\nimport {MatCardModule} from '@angular/material/card';\n\n\n@NgModule({\n  declarations: [],\n  exports: [\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatSortModule,\n    MatBadgeModule,\n    MatOptionModule,\n    MatPaginatorModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatTableModule,\n  ]\n})\nexport class AngularMaterialModule {\n}\n","import {Shipping} from './shipping';\nimport {ShoppingCart} from './shopping-cart';\nimport {number} from 'ng2-validation/dist/number';\n\nexport class Order {\n  datePlaced: number;\n  items: any[];\n  orderTotal: number;\n\n  constructor(public userId, public shipping: Shipping, cart: ShoppingCart, orderTotal) {\n    this.userId = userId;\n    this.datePlaced = new Date().getTime();\n    shipping = this.shipping;\n    this.orderTotal = orderTotal;\n    this.items = cart.getAll().map(item => {\n      return {\n        product: {\n          title: item.title,\n          price: item.price,\n          imageUrl: item.imageUrl\n        },\n        quantity: item.quantity,\n        totalPrice: Number(item.price) * item.quantity\n      };\n    });\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {ShoppingCartComponent} from './shopping-cart/shopping-cart.component';\nimport {LoginComponent} from './login/login.component';\nimport {MyOrdersComponent} from './my-orders/my-orders.component';\nimport {AdminOrdersComponent} from './admin/admin-orders/admin-orders.component';\nimport {ProductsComponent} from './admin/products/products.component';\nimport {CheckOutComponent} from './check-out/check-out.component';\nimport {AuthGuard} from './services/auth-guard.service';\nimport {AccessDeniedComponent} from './access-denied/access-denied.component';\nimport {AdminAuthGaurd} from './admin-auth-gaurd.service';\nimport {EditProductComponent} from './admin/edit-product/edit-product.component';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\nimport {OrderService} from './services/order.service';\nimport {OrderSuccessComponent} from './order-success/order-success.component';\n\nconst routes: Routes = [\n  {path: 'shopping-cart', component: ShoppingCartComponent},\n  {path: 'order-success/:id', component: OrderSuccessComponent},\n  {path: '', component: HomeComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'my-orders', component: MyOrdersComponent, canActivate: [AuthGuard]},\n  {path: 'check-out', component: CheckOutComponent, canActivate: [AuthGuard]},\n  {path: 'edit-product/:id', component: EditProductComponent, canActivate: [AuthGuard, AdminAuthGaurd]},\n  {path: 'admin/admin-orders', component: AdminOrdersComponent, canActivate: [AuthGuard, AdminAuthGaurd]},\n  {path: 'admin/products', component: ProductsComponent, canActivate: [AuthGuard, AdminAuthGaurd]},\n  {path: 'access-denied', component: AccessDeniedComponent},\n  {path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload', scrollPositionRestoration: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(public authenticationService: AuthenticationService) {\n  }\n\n  login() {\n    this.authenticationService.login();\n  }\n\n}\n","<div style=\"padding-top: 50px\">\n  <button (click)=\"login()\" class=\"btn btn-primary\">Login with Google</button>\n</div>\n","import {Injectable} from '@angular/core';\nimport {AngularFireDatabase, AngularFireList} from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  constructor(private db: AngularFireDatabase) {\n  }\n\n  getCategories(): AngularFireList<{ name: string }> {\n    return this.db.list('/categories');\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}